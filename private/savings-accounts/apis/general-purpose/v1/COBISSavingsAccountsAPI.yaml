openapi: 3.0.0

info:
  title: COBIS API Cuentas de Ahorros Transaccional # COBIS API Transactional Savings Account
  description: 'Este es el API del sistema transaccional de cuentas de ahorros del Core Banking System. Se encuentran definidos los servicios esenciales para realizar las operaciones transaccionales del producto de Cuentas de Ahorros, y permite gestionar las operaciones de cuentas de ahorros de un sistema financiero. Puedes conseguir mas información en nuestra sitio web: [http://www.cobiscorp.com](http://www.cobiscorp.com).' # TODO: Actualizar enlace al sitio del producto de cuentas de ahorros o mejor de APIs.
  version: 1.0.0
  termsOfService: http://cobiscorp.com/terms/cobisapi # TODO: Términos de servicio
  contact:
    name: COBIS Support Center
    url: http://www.cobiscorp.com/contact-us/customer-technical-support/
    email: support.center@cobiscorp.com
  license:
    name: Licencia COBIS API # TODO: Definir el tipo y nombre de la licencia. Condiciones de uso y Legal
    url: http://www.cobiscorp.com/licenses/LICENSE-1.0.html # TODO: Publicar licencia.

servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Cobiscorp/COBISAPITransactionalSavingsAccount/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Cobiscorp/COBISAPICoreBanking/1.0.0
  - url: http://cobisapi.cobiscorp.com/lastest
    description: Main (production) server
  - url: http://staging-cobisapi.cobiscorp.com
    description: Internal staging server for testing

##########################################################
##                       FOR AWS                        ##
##########################################################
# Validación de solicitudes desde el API Gateway 
#x-amazon-apigateway-request-validators: {
#  all: {
#     validateRequestBody: true,
#     validateRequestParameters: true
#  },
#  params-only: {
#     validateRequestBody: false,
#     validateRequestParameters: true
#  }
#}
# Por defecto valida todas las operaciones, tanto parámetros como cuerpo del mensaje.
#x-amazon-apigateway-request-validator: "all"
##########################################################


tags:
- name: consultas # retrieve
  #description: 'Las operaciones que se listan a continuación permiten obtener información sobre el producto de cuentas de ahorros.'
  # Puede inclurse más documentación
  #externalDocs: 
  #  description: 'Encuentre más información en'
  #  url: http://www.cobiscorp.com/products/savings
- name: solicitudes # request
  description: 'Operaciones de solicitud de actualización'
- name: transacciones # execute
  description: 'Operaciones transaccionales'
- name: terminaciones # terminate
  description: 'Operaciones para el cierre'


paths:
  /savings-accounts/{number}:
    get:
      tags:
      - consultas
      summary: 'Consulta una cuenta de ahorros por el número de cuenta'
      description: 'Retorna la información básica de la cuenta de ahorros.'
      operationId: SavingsAccountsGetByNumber
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
        # BODY REQUEST
        - name: number
          in: path
          required: true
          #description: 'Identificador interno único de cuenta de ahorros.'
          description: 'Número de cuenta de ahorros.'
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccountNumber'
      responses:
        200:
          description: 'Información de la cuenta de ahorros'
          headers:
            X-Correlation-ID:
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
              example: # 
                savingsAccount:
                  code: 345353
                  number: '011201000019'
                  status: 'A'
                  savingsBook:
                    number: 1234
                  #  controlNumber: 12
                  #  balance: '600.00'
                  #branch:
                  #  code: 123
                  currency:
                    code: 5
                    isoCode: 'USD'
                  #openingDate: '2019-02-13'
                  #customer:
                  #  identification:
                  #    number: '123123123'
                  #    type:
                  #      code: 'CC'
                  #  name: 'Thomas'
                  #  lastName: 'Jefferson'
                  name: 'THOMAS JEFFERSON'
                  #availableBalance: '600.00'

        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'
  
  
      
  /savings-accounts/deposit:
    post:
      tags:
        - transacciones
      summary: 'Realiza un depósito con o sin libreta a una cuenta de ahorros'
      description: 'Realiza un depósito a una cuenta de ahorros. El depósito puede hacerse con libreta o sin ella.'
      operationId: SavingsAccountsDepositCreate
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      # BODY REQUEST
      requestBody:
        description: 'Datos para realizar el déposito a la cuenta de ahorros. Si el depósito es con libreta, debe enviarse el elemento savingsBook. En caso contrario, el elemento savingsBook no es requerido.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositSavingsAccountRq'
            example: # Depósito a cuenta de ahorros. 
              savingsAccount:
                number: '011201000019'
                savingsBook:
                  number: 1234
                  controlNumber: 12
                  balance: '1000.00'
              transaction:
                cashAmount: '300.00'
                localChecksAmount: '200.00'
                othersChecksAmount: '100.00'
                totalAmount: '600.00'
#            examples:
#              DepositWithoutBook: 
#                summary: Depósito sin libreta
#                value:
#                  savingsAccount:
#                    number: '011201000019'
#                  transaction:
#                    cashAmount: '300.00'
#                    localChecksAmount: '200.00'
#                    othersChecksAmount: '100.00'
#                    totalAmount: '600.00'
#              DepositWithBook: 
#                summary: Depósito con libreta
#                value:
#                  savingsAccount:
#                    number: '011201000019'
#                    savingsBook:
#                      number: 1234
#                      controlNumber: 12
#                      balance: '1000.00'
#                  transaction:
#                    cashAmount: '300.00'
#                    localChecksAmount: '200.00'
#                    othersChecksAmount: '100.00'
#                    totalAmount: '600.00'
      responses:
        201:
          description: 'Se ha realizado la transacción exitosamente.'
          headers:
            X-Correlation-ID:
              #description: 'ID que relaciona la respuesta con la solicitud. El valor de este campo debe coincidir con el valor X-Request-ID enviado en la solicitud.'
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction' # TODO: Revisar respuesta de la transacción
              example:
                postingDate: '2019-02-13'
                primaryTransactionId: 1521020
                secondaryTransactionId: 13395
                branch:
                  code: 123
                cashAmount: '300.00'
                localChecksAmount: '200.00'
                othersChecksAmount: '100.00'
                totalAmount: '600.00'
                currency:
                  code: 5
                  description: 'USD'
                account:
                  number: '011201000019'
                #  status:
                #    code: 'A'
                #  savingsBook:
                #    number: 1234
                #    controlNumber: 12
                #    line: 50
                #    balance: '1600.00'
                #  currency:
                #    code: 5
                #    description: 'USD'
                #  customer:
                #    identification:
                #      number: '123123123'
                #      type:
                #        code: 'CC'
                #    name: 'Thomas'
                #    lastName: 'Jefferson'
                #  name: 'THOMAS JEFFERSON'
                #  availableBalance: '1600.00'
                #  dateOfLastMovement: '2019-03-14'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'
        
  /savings-accounts/deposit/initial:
    post:
      tags:
        - transacciones
      summary: 'Realiza el depósito inicial de una cuenta de ahorros'
      description: 'Realiza un depósito inicial a una cuenta de ahorros. El depósito debe hacerse con libreta, siendo este el primer movimiento.'
      operationId: SavingsAccountsInitialDepositCreate
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      # BODY REQUEST
      requestBody:
        description: 'Datos para realizar el déposito inicial a la cuenta de ahorros. Si el depósito es con libreta, debe enviarse el elemento savingsBook. En caso contrario, el elemento savingsBook no es requerido.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitialDepositSavingsAccountRq'
            example: # Depósito inicial a cuenta de ahorros. 
              savingsAccount:
                number: '011201000019'
                savingsBook:
                  number: 1234
              transaction:
                cashAmount: '300.00'
                localChecksAmount: '200.00'
                othersChecksAmount: '100.00'
                totalAmount: '600.00'
      responses:
        201:
          description: 'El depósito inicial se ha realizado exitosamente.'
          headers:
            X-Correlation-ID:
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction' # TODO: Revisar respuesta de la transacción
              example:
                postingDate: '2019-02-13'
                primaryTransactionId: 1521020
                secondaryTransactionId: 13395
                branch:
                  code: 123
                cashAmount: '300.00'
                localChecksAmount: '200.00'
                othersChecksAmount: '100.00'
                totalAmount: '600.00'
                currency:
                  code: 5
                  isoCode: 'USD'
                account:
                  number: '011201000019'
                #  status:
                #    code: 'A'
                #  savingsBook:
                #    number: 1234
                #    controlNumber: 432
                #    line: 1
                #    balance: '600.00'
                #  currency:
                #    code: 5
                #    isoCode: 'USD'
                #  customer:
                #    identification:
                #      number: '123123123'
                #      type:
                #        code: 'CC'
                #    name: 'Thomas'
                #    lastName: 'Jefferson'
                #  name: 'THOMAS JEFFERSON'
                #  availableBalance: '600.00'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'

  /savings-accounts/withdraw:
    post:
      tags:
        - transacciones
      summary: 'Realiza un retiro en efectivo con o sin libreta de una cuenta de ahorros'
      description: 'Realiza un retiro en efectivo con o sin libreta de una cuenta de ahorros determinada.'
      operationId: SavingsAccountsWithdrawCreate
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      # BODY REQUEST
      requestBody:
        description: 'Datos para realizar el retiro en efectivo de una cuenta de ahorros. Si el retiro es con libreta, debe enviarse el elemento savingsBook. En caso contrario, el elemento savingsBook no es requerido.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawSavingsAccountRq'
            example: # Retiro en efectivo de cuenta de ahorros. 
              savingsAccount:
                number: '011201000019'
                savingsBook:
                  number: 1234
                  controlNumber: 12
                  balance: '1000.00'
              transaction:
                cashAmount: '300.00' # TODO: Validar campo
      responses:
        201:
          description: 'El retiro se ha realizado exitosamente.'
          headers:
            X-Correlation-ID:
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction' # TODO: Revisar respuesta de la transacción
              example:
                postingDate: '2019-02-13'
                primaryTransactionId: 12345678
                secondaryTransactionId: 13395
                branch:
                  code: 123
                cashAmount: '300.00'
                #localChecksAmount: '200.00'
                #othersChecksAmount: '100.00'
                #totalAmount: '600.00'
                currency:
                  code: 5
                  isoCode: 'USD'
                account:
                  number: '1234567890'
                #  status:
                #    code: 'A'
                #  savingsBook:
                #    number: 1234
                #    controlNumber: 12
                #    line: 50
                #    balance: '1300.00'
                #  currency:
                #    code: 5
                #    isoCode: 'USD'
                #  customer:
                #    identification:
                #      number: '123123123'
                #      type:
                #        code: 'CC'
                #    name: 'Thomas'
                #    lastName: 'Jefferson'
                #  name: 'THOMAS JEFFERSON'
                #  availableBalance: '1300.00'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'

  /savings-accounts/debit-note:
    post:
      tags:
        - transacciones
      summary: 'Realiza una nota débito sin libreta a una cuenta de ahorros'
      description: 'Realiza una nota débito a una cuenta de ahorros. Esta operación se realiza sin libreta de ahorros.'
      operationId: SavingsAccountsDebitNoteCreate
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      # BODY REQUEST
      requestBody:
        description: 'Datos para realizar la nota débito a la cuenta de ahorros.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebitNoteSavingsAccountRq'
            example: # TODO: Ajustar request. 
              savingsAccount:
                number: '011201000019'
              transaction:
                cause: '10' # COMISION GASTO CORRESPONSAL CHEQUE REMESA
                indicator: 1 # Disponible
                department: 1 # Operaciones
                totalAmount: '600.00'
                #description
      responses:
        201:
          description: 'La nota débito se ha realizado exitosamente.'
          headers:
            X-Correlation-ID:
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction' # TODO: Revisar respuesta de la transacción
              example:
                postingDate: '2019-02-13'
                primaryTransactionId: 1521020
                secondaryTransactionId: 13395
                branch:
                  code: 123
                cause: '10'
                indicator: 1 
                department: 1 
                #cashAmount: '300.00'
                #localChecksAmount: '200.00'
                #othersChecksAmount: '100.00'
                totalAmount: '600.00'
                currency:
                  code: 5
                  isoCode: 'USD'
                account:
                  number: '1234567890'
                #  status:
                #    code: 'A'
                #  savingsBook:
                #    number: 1234
                #    controlNumber: 12
                #    line: 50
                #    balance: '1600.00'
                #  currency:
                #    code: 5
                #    isoCode: 'USD'
                #  customer:
                #    identification:
                #      number: '123123123'
                #      type:
                #        code: 'CC'
                #    name: 'Thomas'
                #    lastName: 'Jefferson'
                #  name: 'THOMAS JEFFERSON'
                #  availableBalance: '1600.00'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'
          
  /savings-accounts/credit-note:
    post:
      tags:
        - transacciones
      summary: 'Realiza una nota crédito sin libreta a una cuenta de ahorros'
      description: 'Realiza una nota crédito a una cuenta de ahorros. Esta operación se realiza sin libreta de ahorros.'
      operationId: SavingsAccountsCreditNoteCreate
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      # BODY REQUEST
      requestBody:
        description: 'Datos para realizar la nota crédito a la cuenta de ahorros.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNoteSavingsAccountRq'
            example: # TODO: Ajustar request. 
              savingsAccount:
                number: '011201000019'
              transaction:
                cause: '1' # Por ajuste
                indicator: 1 # Disponible
                departament: 1 # Operaciones
                totalAmount: '600.00'
                #description
      responses:
        201:
          description: 'La nota crédito se ha realizado exitosamente.'
          headers:
            X-Correlation-ID:
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction' # TODO: Revisar respuesta de la transacción
              example:
                postingDate: '2019-02-13'
                primaryTransactionId: 1521020
                secondaryTransactionId: 13395
                branch:
                  code: 123
                cause: '1' 
                indicator: 1 
                departament: 1 
                #cashAmount: '300.00'
                #localChecksAmount: '200.00'
                #othersChecksAmount: '100.00'
                totalAmount: '600.00'
                currency:
                  code: 5
                  isoCode: 'USD'
                account:
                  number: '1234567890'
                #  status:
                #    code: 'A'
                #  savingsBook:
                #    number: 1234
                #    controlNumber: 12
                #    line: 50
                #    balance: '1600.00'
                #  currency:
                #    code: 5
                #    isoCode: 'USD'
                #  customer:
                #    identification:
                #      number: '123123123'
                #      type:
                #        code: 'CC'
                #    name: 'Thomas'
                #    lastName: 'Jefferson'
                #  name: 'THOMAS JEFFERSON'
                #  availableBalance: '1600.00'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'

  /savings-accounts/transfer:
    post:
      tags:
        - transacciones
      summary: 'Realiza una transferencia entre cuentas de ahorros.'
      description: 'Realiza una transferencia a una cuenta de ahorros, indicando la cuenta origen, la cuenta destino.'
      operationId: SavingsAccountsTransferCreate
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      # BODY REQUEST
      requestBody:
        description: 'Datos para realizar la transferencia entre las cuentas de ahorros.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferSavingsAccountRq'
            example: # Transferencia de cuentas de ahorros. 
              originSavingsAccount:
                #type: "AHO"
                number: '011201000019'
              destinationSavingsAccount:
                #type: "AHO"
                number: '011303400453'
              transaction:
                totalAmount: '600.00'
                transactionConcept: 'Transferencia para pago de servicios'
      responses:
        201:
          description: 'Se ha realizado la transacción exitosamente.'
          headers:
            X-Correlation-ID:
              #description: 'ID que relaciona la respuesta con la solicitud. El valor de este campo debe coincidir con el valor X-Request-ID enviado en la solicitud.'
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction' # TODO: Revisar respuesta de la transacción
              example:
                postingDate: '2019-02-13'
                primaryTransactionId: 1521020 
                secondaryTransactionId: 13395
                branch:
                  code: 123
                #cashAmount: '300.00'
                #localChecksAmount: '200.00'
                #othersChecksAmount: '100.00'
                totalAmount: '600.00'
                currency:
                  code: 5
                  isoCode: 'USD'
                account:
                  number: '011201000019'
                #  status:
                #    code: 'A'
                #  currency:
                #    code: 5
                #    isoCode: 'USD'
                #  customer:
                #    identification:
                #      number: '123123123'
                #      type:
                #        code: 'CC'
                #    name: 'Thomas'
                #    lastName: 'Jefferson'
                #  name: 'THOMAS JEFFERSON'
                destinationAccount:
                  number: '011303400453'
                #  status:
                #    code: 'A'
                #  currency:
                #    code: 5
                #    isoCode: 'USD'
                #  customer:
                #    identification:
                #      number: '987654321'
                #      type:
                #        code: 'CC'
                #    name: 'Thomas'
                #    lastName: 'Jefferson'
                #  name: 'THOMAS JEFFERSON'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'
  

#  /savings-accounts/book:
#    put:
#      tags:
#        - solicitudes
#      summary: 'Actualiza la libreta de una cuenta de ahorros.'
#      description: 'Actualiza los datos de una libreta de una cuenta de ahorros.'
#      operationId: SavingsAccountBookUpdate
#      parameters:
        # HEADER REQUEST
#        - $ref: '#/components/parameters/X-Authorization'
#        - $ref: '#/components/parameters/X-Request-ID'
#        - $ref: '#/components/parameters/X-Financial-ID'
#        - $ref: '#/components/parameters/X-EndUser-Login'
#        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
#        - $ref: '#/components/parameters/X-EndUser-Terminal'
#        - $ref: '#/components/parameters/X-Channel'
#      #BODY REQUEST
#      requestBody:
#        description: 'Datos para actualizar la libreta de la cuenta de ahorros.'
#        required: true
#        content:
#          application/json:
#            schema: # TODO: Ajustar request
#              type: object
#              properties:
#                savingsAccount:
#                  $ref: '#/components/schemas/SavingsAccount'
#            example: # Cerrar cuenta de ahorros. 
#              number: '1234567890'
#              savingsBook:
#                number: 1234
#                controlNumber: 12
#                balance: '1000.00'
#      responses:
#        200:
#          description: 'La libreta se ha actuailzado exitosamente.'
#          headers:
#            X-Correlation-ID:
#              schema:
#                $ref: '#/components/parameters/X-Correlation-ID'
#        400:
#          $ref: '#/components/responses/400BadRequest'
#        401:
#          $ref: '#/components/responses/401Unauthorized'
#        403:
#          $ref: '#/components/responses/403Forbidden'
#        404:
#          $ref: '#/components/responses/404NotFound'
#        429:
#          $ref: '#/components/responses/429TooManyRequests'
#        500:
#          $ref: '#/components/responses/500InternalServerError'

  /savings-accounts/book/initizalization:
    put:
      tags:
        - solicitudes
      summary: 'Personifica la libreta de una cuenta de ahorros.'
      description: 'Personifica la libreta de una cuenta de ahorros.'
      operationId: SavingsAccountsIniBookUpdate
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      #BODY REQUEST
      requestBody:
        description: 'Datos para realizar la personificación de la libreta de la cuenta de ahorros.'
        required: true
        content:
          application/json:
            schema: # TODO: Ajustar request, incluir ejemplos
              $ref: '#/components/schemas/InitialDepositSavingsAccountRq'
            example:
              savingsAccount:
                number: '011201000019'
      responses:
        200:
          description: 'La solicitud se ha ejecutado exitosamente.'
          headers:
            X-Correlation-ID:
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'

#  /savings-accounts/book/balance: # TODO: Validar descripciones de la operación, ya que la impresión la hace directamente el front-end.
#    put:
#      tags:
#        - solicitudes
#      summary: 'Imprime el saldo en la libreta de una cuenta de ahorros.'
#      description: 'Imprime el saldo en la libreta de una cuenta de ahorros.'
#      operationId: SavingsAccountsBalanceBookUpdate
#      parameters:
#        # HEADER REQUEST
#        - $ref: '#/components/parameters/X-Authorization'
#        - $ref: '#/components/parameters/X-Request-ID'
#        - $ref: '#/components/parameters/X-Financial-ID'
#        - $ref: '#/components/parameters/X-EndUser-Login'
#        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
#        - $ref: '#/components/parameters/X-EndUser-Terminal'
#        - $ref: '#/components/parameters/X-Channel'
#      #BODY REQUEST
#      requestBody:
#        description: 'Datos para realizar la impresión del saldo en la libreta de la cuenta de ahorros.'
#        required: true
#        content:
#          application/json:
#            schema: # TODO: Ajustar request
#              type: object
#              properties:
#                savingsAccount:
#                  $ref: '#/components/schemas/SavingsAccount'
#            example: # Impresión del saldo de la libreta. 
#              number: '1234567890'
#              savingsBook:
#                number: 1234
#      responses:
#        200:
#          description: 'Se han enviado los datos para la impresión del saldo en la libreta exitosamente.'
#          headers:
#            X-Correlation-ID:
#              schema:
#                $ref: '#/components/parameters/X-Correlation-ID'
#        400:
#          $ref: '#/components/responses/400BadRequest'
#        403:
#          $ref: '#/components/responses/403Forbidden'
#        404:
#          $ref: '#/components/responses/404NotFound'
#        429:
#          $ref: '#/components/responses/429TooManyRequests'
#        404:
#          $ref: '#/components/responses/404NotFound'
#        500:
#          $ref: '#/components/responses/500InternalServerError'


  /savings-accounts/close:
    delete:
      tags:
        - terminaciones
      summary: 'Cancela una cuenta de ahorros.'
      description: 'Cierra y cancela una cuenta de ahorros.'
      operationId: SavingsAccountsClose
      parameters:
        # HEADER REQUEST
        - $ref: '#/components/parameters/X-Authorization'
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-Financial-ID'
        - $ref: '#/components/parameters/X-EndUser-Login'
        - $ref: '#/components/parameters/X-EndUser-RequestDateTime'
        - $ref: '#/components/parameters/X-EndUser-Terminal'
        - $ref: '#/components/parameters/X-Channel'
      #BODY REQUEST
      requestBody:
        description: 'Datos para realizar el cierre de la cuenta de ahorros.'
        required: true
        content:
          application/json:
            schema: # TODO: Ajustar request
              $ref: '#/components/schemas/CloseSavingsAccountRq'
            example: # Cerrar cuenta de ahorros.
              savingsAccount:
                number: '1234567890'
                savingsBook:
                  number: 1234
                  controlNumber: 12
                  balance: '1000.00'
              detailToCloseSavingsAccount:
                finalWithdraw: '1000.00'
                #causeOfClosure: Solo se requiere el detalle, por usabilidad.
                detailedCauseOfClosure:
                  code: 1 # Detalle, para algún CauseOfClosure, ej: 1 (Decisión del cliente)
                # TODO: Validar autorizante
      responses:
        200:
          description: 'La solicitud se ha ejecutado exitosamente.'
          headers:
            X-Correlation-ID:
              schema:
                $ref: '#/components/parameters/X-Correlation-ID'
        400:
          $ref: '#/components/responses/400BadRequest'
        401:
          $ref: '#/components/responses/401Unauthorized'
        403:
          $ref: '#/components/responses/403Forbidden'
        404:
          $ref: '#/components/responses/404NotFound'
        429:
          $ref: '#/components/responses/429TooManyRequests'
        500:
          $ref: '#/components/responses/500InternalServerError'


#externalDocs:
#  description: 'Encuentra más información acerca de Cobiscorp en http://www.cobiscorp.com'
#  url: 'http://www.cobiscorp.com'

components:
  ####################################################################
  # Reusable path, query, header and cookie parameters
  ####################################################################
  parameters:
    #############################
    # REQUEST HEADER PARAMETERS #
    #############################
    X-Authorization:
      name: X-Authorization
      description: 'JSON Web Token (JWT) entregado al usuario en la autenticación'
      in: header
      schema:
        type: string
      required: true
    X-Request-ID:
      name: X-Request-ID
      description: 'Identificación única de la solicitud o petición'
      in: header
      schema:
        $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/RequestID'
      required: true
    X-Financial-ID:
      name: X-Financial-ID
      description: 'ID del banco o entidad financiera que provee el servicio de cuentas de ahorros'
      in: header
      schema: 
        type: string
      required: false
    X-EndUser-Login:
      name: X-EndUser-Login
      description: 'Login de usuario en la aplicación de front-end que realiza la petición'
      in: header
      schema: 
        type: string
      required: false
    X-EndUser-RequestDateTime:
      name: X-EndUser-RequestDateTime
      description: 'Fecha y hora en la que se originó la solicitud o petición por el usuario en la aplicación de front-end'
      in: header
      schema:
        type: string
        format: date-time
      required: false
    X-EndUser-Terminal:
      name: X-EndUser-Terminal
      description: 'Terminal (IP, número de teléfono, o identificador del dispositivo) desde el cual se originó la solicitud o petición por el usuario en la aplicación de front-end'
      in: header
      schema:
        type: string
      required: false
    X-Channel:
      name: X-Channel
      description: 'Canal desde el cual se origina la solicitud'
      in: header
      schema:
        $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ChannelCode'
      required: false
    ##############################
    # RESPONSE HEADER PARAMETERS #
    ##############################
    X-Correlation-ID:
      name: X-Correlation-ID
      description: 'ID que relaciona la respuesta con la solicitud. El valor de este campo debe coincidir con el valor X-Request-ID enviado en la solicitud.'
      in: header
      schema:
        $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/RequestID'
    
    #############################
    # REQUEST QUERY PARAMETERS #
    #############################
    pagingLimitSize:
      name: pagingLimitSize
      description: 'Tamaño límite de paginación para una consulta que retorne una lista de elementos.'
      in: query
      schema:
        $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/PagingLimitSize'
      required: false
    pagingOffset:
      name: pagingOffset
      description: 'Número del registro desde el cual, a partir del siguiente se inicia el siguiente conjunto de resultados de la página.'
      in: query
      schema:
        $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/PagingOffset'
      required: false
      

        
  ####################################################################
  # Security scheme definitions (see Authentication)
  ####################################################################
  #securitySchemes:
  #  cobiscbs_auth:
  #    type: oauth2
  #    flows:
  #      implicit:
  #        authorizationUrl: 'http://cobisapi.cobiscorp.com/oauth/dialog'
  #        scopes:
  #          'write:savings-accounts': 'Modificar y eliminar cuentas de ahorros'
  #          'read:savints-accounts': 'Consultar información de cuentas de ahorros'
  #          
  #  api_key:
  #    type: apiKey
  #    name: api_key # TODO: Revisar implementación y concordancia con el header X-Authorization de cada servicio.
  #    in: header
  
  ####################################################################
  # Reusable request bodies
  ####################################################################
  #requestBodies:
  #  DepositSavingsAccountRq:
  #    description: 'Solicitud de depósito de cuenta de ahorros.'
  #    required: true
  #    content:
  #      application/json:
  #        schema:
  #          type: object
  #          properties:
  #            savingsAccount:
  #              $ref: '#/components/schemas/SavingsAccount'
  #            transaction:
  #              $ref: '#/components/schemas/Transaction'
  
  ####################################################################
  # Reusable responses, such as 401 Unauthorized or 400 Bad Request
  ####################################################################
  responses:
    400BadRequest:
      description: 'El mensaje de solicitud no se encuentra debidamente formateado.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
          example:
            code: '400'
            message: 'El mensaje de solicitud no se encuentra debidamente formateado.'
    401Unauthorized:
      description: 'No se encuentra autorizado para ejecutar la operación.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
          example:
            code: '401'
            message: 'No se encuentra autorizado para ejecutar la operación.'
    403Forbidden:
      description: 'La solicitud ha sido denegada.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
          example:
            code: '403'
            message: 'La solicitud ha sido denegada.'
    404NotFound:
      description: 'El objeto no fue encontrado.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
          example:
            code: '404'
            message: 'El objeto no fue encontrado.'
    429TooManyRequests:
      description: 'Se ha realizado la solicitud más de una vez.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
          example:
            code: '429'
            message: 'Se ha realizado la solicitud más de una vez.'
    500InternalServerError:
      description: 'Se presentó un error durante el procesamiento de la solicitud.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
          example:
            code: '500'
            message: 'Se presentó un error durante el procesamiento de la solicitud.'
    502BadGateway:
      description: 'Se presentó un error al procesar la respuesta de un servicio proxy requerido para la solicitud.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
          example:
            code: '502'
            message: 'Se presentó un error al procesar la respuesta de un servicio proxy requerido para la solicitud.'
    503ServiceUnavailable:
      description: 'El servicio no se encuentra disponible en el momento.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
    504GatewayTimeout:
      description: 'El servicio proxy no respondió en el tiempo para procesar la solicitud.'
      headers:
        X-Correlation-ID:
          schema:
            $ref: '#/components/parameters/X-Correlation-ID'
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage'
  
  ####################################################################
  # Reusable response headers
  ####################################################################
  #headers:
  
  ####################################################################
  # Reusable examples
  ####################################################################
  #examples:
  
  ####################################################################
  # Reusable links
  ####################################################################
  #links:
  
  ####################################################################
  # Reusable callbacks
  ####################################################################
  #callbacks:
  
  ####################################################################
  # Reusable schemas (data models)
  ####################################################################
  schemas:
    #########################
    #    COMPLEX REQUEST    #
    #########################
    CreditNoteSavingsAccountRq: # REQUEST FOR:/credit-note
      description: 'Depósito de cuenta de ahorros' 
      type: object
      properties:
        savingsAccount:
          #$ref: '#/components/schemas/SavingsAccount'
          #$ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        transaction:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction'
    
    CloseSavingsAccountRq: # REQUEST FOR:/close
      description: 'Cierre de cuenta de ahorros' 
      type: object
      properties:
        savingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        detailToCloseSavingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/ClosedSavingsAccount'
    
    DepositSavingsAccountRq: # REQUEST FOR:/deposit
      description: 'Depósito de cuenta de ahorros' 
      type: object
      properties:
        savingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        transaction:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction'
    
    DebitNoteSavingsAccountRq: # REQUEST FOR:/debit-note
      description: 'Depósito de cuenta de ahorros' 
      type: object
      properties:
        savingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        transaction:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction'
    
    InitialDepositSavingsAccountRq: # REQUEST FOR:/deposit/initial
      description: 'Depósito inicial de cuenta de ahorros' 
      type: object
      properties:
        savingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        transaction:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction'
    
    TransferSavingsAccountRq: # REQUEST FOR:/transfer
      description: 'Depósito de cuenta de ahorros' 
      type: object
      properties:
        originSavingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        destinationSavingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        transaction:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction'
    
    WithdrawSavingsAccountRq: # REQUEST FOR:/withdraw
      description: 'Depósito inicial de cuenta de ahorros' 
      type: object
      properties:
        savingsAccount:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/SavingsAccount'
        transaction:
          $ref: 'https://raw.githubusercontent.com/eliashel/cobisapi/master/private/savings-accounts/domain/v1/COBISSavingsAccountsDomain.yaml#/components/schemas/Transaction'

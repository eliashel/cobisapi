{
  "openapi": "3.0.0",
  "info": {
    "description": "This is the domain for definitions of COBIS ADMIN module. This include, users, references, catalogs, etc.",
    "version": "1.0.0",
    "title": "COBIS Admin Domain"
  },
  "components": {
    "parameters": {
      "X-Authorization": {
        "name": "X-Authorization",
        "description": "JSON Web Token (JWT) entregado al usuario en la autenticación",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "X-Request-ID": {
        "name": "X-Request-ID",
        "description": "Identificación única de la solicitud o petición",
        "in": "header",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/RequestID"
        },
        "required": true
      },
      "X-Financial-ID": {
        "name": "X-Financial-ID",
        "description": "ID del banco o entidad financiera que provee el servicio de cuentas de ahorros",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-EndUser-Login": {
        "name": "X-EndUser-Login",
        "description": "Login de usuario en la aplicación de front-end que realiza la petición",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-EndUser-RequestDateTime": {
        "name": "X-EndUser-RequestDateTime",
        "description": "Fecha y hora en la que se originó la solicitud o petición por el usuario en la aplicación de front-end",
        "in": "header",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false
      },
      "X-EndUser-Terminal": {
        "name": "X-EndUser-Terminal",
        "description": "Terminal (IP, número de teléfono, o identificador del dispositivo) desde el cual se originó la solicitud o petición por el usuario en la aplicación de front-end",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": false
      },
      "X-EndUser-LastLoggedDateTime": {
        "name": "X-EndUser-LastLoggedDateTime",
        "description": "Fecha y hora del último logueo del usuario en la aplicación",
        "in": "header",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false
      },
      "X-Channel": {
        "name": "X-Channel",
        "description": "Canal desde el cual se origina la solicitud",
        "in": "header",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ChannelCode"
        },
        "required": false
      },
      "X-Correlation-ID": {
        "name": "X-Correlation-ID",
        "description": "ID que relaciona la respuesta con la solicitud. El valor de este campo debe coincidir con el valor X-Request-ID enviado en la solicitud.",
        "in": "header",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/RequestID"
        }
      },
      "pagingLimitSize": {
        "name": "pagingLimitSize",
        "description": "Tamaño límite de paginación para una consulta que retorne una lista de elementos.",
        "in": "query",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/PagingLimitSize"
        },
        "required": false
      },
      "pagingOffset": {
        "name": "pagingOffset",
        "description": "Número del registro desde el cual, a partir del siguiente se inicia el siguiente conjunto de resultados de la página.",
        "in": "query",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/PagingOffset"
        },
        "required": false
      }
    },
    "responses": {
      "400BadRequest": {
        "description": "El mensaje de solicitud no se encuentra debidamente formateado.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "400",
              "message": "El mensaje de solicitud no se encuentra debidamente formateado."
            }
          }
        }
      },
      "401Unauthorized": {
        "description": "No se encuentra autorizado para ejecutar la operación.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "401",
              "message": "No se encuentra autorizado para ejecutar la operación."
            }
          }
        }
      },
      "403Forbidden": {
        "description": "La solicitud ha sido denegada.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "403",
              "message": "La solicitud ha sido denegada."
            }
          }
        }
      },
      "404NotFound": {
        "description": "El objeto no fue encontrado.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "404",
              "message": "El objeto no fue encontrado."
            }
          }
        }
      },
      "405MethodNotAllowed": {
        "description": "La operación (método, ej: GET, POST, etc.) que se trata de ejecutar no se encuentra soportado para el contexto.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "405",
              "message": "La operación no se encuentra soportada."
            }
          }
        }
      },
      "406NotAcceptable": {
        "description": "La solicitud no fue aceptada.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "406",
              "message": "La solicitud no fue aceptada."
            }
          }
        }
      },
      "429TooManyRequests": {
        "description": "Se ha realizado la solicitud más de una vez.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "429",
              "message": "Se ha realizado la solicitud más de una vez."
            }
          }
        }
      },
      "500InternalServerError": {
        "description": "Se presentó un error durante el procesamiento de la solicitud.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "500",
              "message": "Se presentó un error durante el procesamiento de la solicitud."
            }
          }
        }
      },
      "502BadGateway": {
        "description": "Se presentó un error al procesar la respuesta de un servicio proxy requerido para la solicitud.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            },
            "example": {
              "code": "502",
              "message": "Se presentó un error al procesar la respuesta de un servicio proxy requerido para la solicitud."
            }
          }
        }
      },
      "503ServiceUnavailable": {
        "description": "El servicio no se encuentra disponible en el momento.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            }
          }
        }
      },
      "504GatewayTimeout": {
        "description": "El servicio proxy no respondió en el tiempo para procesar la solicitud.",
        "headers": {
          "X-Correlation-ID": {
            "schema": {
              "$ref": "#/components/parameters/X-Correlation-ID"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "https://raw.githubusercontent.com/eliashel/cobisapi/master/private/admin/domain/v1/COBISAdminDomain.yaml#/components/schemas/ErrorMessage"
            }
          }
        }
      }
    },
    "schemas": {
      "Branch": {
        "description": "Oficina",
        "properties": {
          "code": {
            "type": "integer",
            "minimum": 1,
            "maximum": 32767
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          }
        }
      },
      "City": {
        "description": "Cuidad",
        "properties": {
          "code": {
            "type": "number",
            "format": "int32",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          }
        }
      },
      "Country": {
        "description": "Pais",
        "properties": {
          "code": {
            "type": "number",
            "format": "int32",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "isoCode": {
            "type": "string",
            "minLength": 1,
            "maxLength": 3
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          }
        }
      },
      "Currency": {
        "description": "Moneda",
        "properties": {
          "code": {
            "type": "integer",
            "minimum": 1,
            "maximum": 32767
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "isoCode": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3
          },
          "symbol": {
            "type": "string",
            "minLength": 1,
            "maxLength": 5
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "status": {
            "description": "'Estado de la moneda:'\n  * V: Vigente\n  * B: Bloqueado\n  * E: Eliminado \n",
            "type": "string",
            "enum": [
              "V",
              "B",
              "E"
            ],
            "minLength": 1,
            "maxLength": 1
          }
        }
      },
      "Department": {
        "description": "Departamento de la organización.",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 32767
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "subsidiary": {
            "$ref": "#/components/schemas/Subsidiary"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          }
        }
      },
      "Officer": {
        "description": "Funcionario o responsable de un usuario del sistema.",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 32767
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "Gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          },
          "user": {
            "$ref": "#/components/schemas/UserLogin"
          },
          "identification": {
            "$ref": "#/components/schemas/Identification"
          }
        }
      },
      "User": {
        "description": "Usuario",
        "properties": {
          "subsidiary": {
            "$ref": "#/components/schemas/Subsidiary"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "login": {
            "$ref": "#/components/schemas/UserLogin"
          },
          "assignmentDate": {
            "type": "string",
            "format": "date"
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date"
          },
          "lastUpdatePasswordDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          }
        }
      },
      "Identification": {
        "description": "Identificación de un cliente",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/IdentificationNumber"
          },
          "type": {
            "$ref": "#/components/schemas/IdentificationType"
          },
          "birthCity": {
            "$ref": "#/components/schemas/City"
          },
          "issueDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "IdentificationType": {
        "description": "Tipo de identificación de una persona natural o jurídica",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/IdentificationTypeCode"
          },
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          }
        }
      },
      "Subsidiary": {
        "description": "Filial",
        "properties": {
          "code": {
            "type": "integer",
            "minimum": 1,
            "maximum": 255
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "status": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          }
        }
      },
      "ChannelCode": {
        "description": "'Canal transccional'\n  * 1: Oficina\n  * 2: Agilizador\n  * 3: Internet\n  * 4: ATM\n  * 5: APP Móvil\n",
        "type": "integer",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "CatalogDescription": {
        "description": "Descripción de un elemento de un catálogo",
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "CatalogStatus": {
        "description": "Estado de un elemento de un catálogo",
        "type": "string",
        "minLength": 1,
        "maxLength": 1
      },
      "Gender": {
        "description": "'Género o sexo de la persona.'\n",
        "properties": {
          "code": {
            "description": "Código del sexo de la persona. Ver listado en: [http://www.cobiscorp.com/api/tabla#cl_tipo_documento](http://www.cobiscorp.com/api/tabla#cl_tipo_documento).",
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          },
          "description": {
            "$ref": "#/components/schemas/CatalogDescription"
          },
          "status": {
            "$ref": "#/components/schemas/CatalogStatus"
          }
        }
      },
      "IdentificationTypeCode": {
        "description": "'Tipo de identificación de una persona natural o jurídica. Ver listado en: [http://www.cobiscorp.com/api/tabla#cl_tipo_documento](http://www.cobiscorp.com/api/tabla#cl_tipo_documento).' # TODO: Actualizar enlace a documentación de catálogos dinámicos.\n",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 4
          }
        }
      },
      "IdentificationNumber": {
        "description": "Número de identificación de una persona natural o jurídica",
        "type": "string",
        "minLength": 5,
        "maxLength": 16
      },
      "UserLogin": {
        "description": "Login de usuario en el sistema CORE. Los usuarios autorizados realizan y autorizan transacciones en  el sistema.",
        "type": "string",
        "minLength": 1,
        "maxLength": 30
      },
      "Amount": {
        "description": "Valor monetario",
        "type": "string",
        "pattern": "[0-9]{1,16}(\\.[0-9]{1,2})"
      },
      "ErrorMessage": {
        "description": "Error retornado cuando una operación no se realiza exitosamente",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "minLength": 3,
            "maxLength": 64
          }
        }
      },
      "Page": {
        "description": "Página de una lista de elementos o registros.",
        "properties": {
          "offset": {
            "$ref": "#/components/schemas/PagingOffset"
          },
          "PagingLimitSize": {
            "$ref": "#/components/schemas/PagingLimitSize"
          }
        }
      },
      "PagingLimitSize": {
        "description": "Tamaño límite de paginación para una consulta que retorne una lista de elementos.",
        "type": "number",
        "format": "int32",
        "minimum": 1,
        "maximum": 50,
        "default": 50
      },
      "PagingOffset": {
        "description": "Número del registro desde el cual, a partir del siguiente se inicia el siguiente conjunto de resultados de la página.",
        "type": "number",
        "format": "int32",
        "minimum": 0,
        "default": 0
      },
      "Paging": {
        "description": "Paginación del resultado de una lista de elementos o registros.",
        "properties": {
          "self": {
            "$ref": "#/components/schemas/Page"
          },
          "first": {
            "$ref": "#/components/schemas/Page"
          },
          "prev": {
            "$ref": "#/components/schemas/Page"
          },
          "next": {
            "$ref": "#/components/schemas/Page"
          },
          "last": {
            "$ref": "#/components/schemas/Page"
          }
        }
      },
      "RequestID": {
        "description": "Identificación única de una petición o solicitud",
        "type": "string",
        "format": "uuid"
      }
    }
  }
}
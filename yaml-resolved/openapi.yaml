openapi: 3.0.0
info:
  title: COBIS API Core Banking System
  description: 'This is de API for COBIS Core Banking System. You can get more information
    about company from our Web Site: [http://www.cobiscorp.com](http://www.cobiscorp.com).'
  termsOfService: http://cobiscorp.com/terms/
  contact:
    name: COBIS Support Center
    url: http://www.cobiscorp.com/contact-us/customer-technical-support/
    email: support.center@cobiscorp.com
  license:
    name: COBIS API
    url: http://www.cobiscorp.com/licenses/LICENSE-1.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Cobiscorp/COBISAPICoreBanking/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://cobisapi.cobiscorp.com/lastest
  description: Main (production) server
- url: http://staging-cobisapi.cobiscorp.com
  description: Internal staging server for testing
tags:
- name: customer
  description: Operations about Customers
  externalDocs:
    description: Find out more
    url: http://www.cobiscorp.com/products/customers
- name: saving
  description: Operations about Savings
  externalDocs:
    description: Find out more
    url: http://www.cobiscorp.com/products/savings
paths:
  /customers/{idType}/{idNumber}/basic-info:
    get:
      tags:
      - customer
      summary: Gets basic information of a customer by ID
      description: Returns a single basic information of a customer for its ID.
      operationId: GetBasicInfoById
      parameters:
      - name: idType
        in: path
        description: Type of customer identification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idNumber
        in: path
        description: Number of customer identification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Basic information of the customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        404:
          description: Customer does not exist.
  /customers/{idType}/{idNumber}/financial-info:
    get:
      tags:
      - customer
      summary: Gets financial information of a customer by ID
      description: Returns a single financial information of a customer for its ID.
      operationId: GetFinancialInfoById
      parameters:
      - name: X-Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: X-Request-ID
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: idType
        in: path
        description: Type of customer identification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idNumber
        in: path
        description: Number of customer identification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Financial information of the customer
          headers:
            X-Correlation-ID:
              description: Request limit per hour.
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        404:
          description: Customer does not exist.
  /savings-accounts/{number}:
    get:
      tags:
      - saving
      summary: Gets a savings accounts information of a customer by account number
      description: Returns a single financial information of a customer for its ID.
      operationId: GetSavingsAccountByNumber
      parameters:
      - name: X-Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: X-Request-ID
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: number
        in: path
        description: Account number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Information of Saving Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsAccount'
        404:
          description: Savings account does not exist.
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        description:
          maxLength: 30
          minLength: 3
          type: string
    Customer:
      type: object
      properties:
        code:
          maximum: 9999999999
          minimum: 1
          type: integer
          format: int32
        identification:
          $ref: '#/components/schemas/Identification'
        name:
          pattern: '[a-z0-9]{3,64}'
          type: string
        lastName:
          maxLength: 30
          minLength: 3
          type: string
        state:
          maxLength: 1
          minLength: 1
          type: string
    Identification:
      type: object
      properties:
        number:
          maximum: 999999999999
          minimum: 10000
          type: number
        type:
          $ref: '#/components/schemas/IdentificationType'
        birthCity:
          $ref: '#/components/schemas/City'
        expedicionDate:
          type: string
          format: date
    IdentificationType:
      type: object
      properties:
        code:
          maximum: 3
          minimum: 2
          type: string
        name:
          maxLength: 30
          minLength: 3
          type: string
        state:
          maxLength: 1
          minLength: 1
          type: string
    City:
      type: object
      properties:
        code:
          maximum: 10
          minimum: 2
          type: string
        name:
          maxLength: 30
          minLength: 3
          type: string
        state:
          maxLength: 1
          minLength: 1
          type: string
    SavingsAccount:
      type: object
      properties:
        code:
          maximum: 9999
          minimum: 1
          type: integer
          description: Código interno de la cuenta de ahorros
          format: int32
        number:
          maxLength: 16
          minLength: 1
          type: string
          description: Número de la cuenta que corresponde al banco
        state:
          type: string
          description: 'Estado de la cuenta: A: ACTIVA, C: CANCELADA, G: INGRESADA,
            I: INACTIVA, N: NO PERFECCIONADA, T: TRASLADADA-INACTIVA, X: TRASLADADA-CANCELADA'
          enum:
          - A
          - C
          - G
          - I
          - N
          - T
          - X
        controlCode:
          maximum: 9999
          minimum: 1
          type: integer
          description: Número secuencial de control
          format: int32
        subsidiaryCode:
          maximum: 9
          minimum: 1
          type: integer
          description: Código de la filial
          format: int32
      description: Cuenta de ahorros
  responses:
    404NotFound:
      description: El objeto no fue encontrado.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    401Unauthorized:
      description: No se encuentra autorizado para ejecutar la operación.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    403Forbidden:
      description: La solicitud ha sido denegada.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    500InternalServerError:
      description: Se presentó un error durante el procesamiento de la solicitud.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    502BadGateway:
      description: Se presentó un error al procesar la respuesta de un servicio proxy requerido para la solicitud.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    503ServiceUnavailable:
      description: El servicio no se encuentra disponible en el momento.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    504GatewayTimeout:
      description: El servicio proxy no respondió en el tiempo para procesar la solicitud.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
